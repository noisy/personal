name: Cypress Tests

on: [push]

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    container:
      image: cypress/base:14.19.0
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: cypress-io/github-action@v5
        with:
          # just perform install
          runTests: false

      - name: E2E tests
        uses: cypress-io/github-action@v5.3.0
        with:
          config-file: cypress.config.e2e.ts
          install: false
          build: npm run build
          start: npm run preview
          wait-on: "http://localhost:5050"
          wait-on-timeout: 120
          record: false
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_E2E_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # overwrite commit message sent to Cypress Cloud
          COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}
          # re-enable PR comment bot
          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}

      - name: Components tests
        uses: cypress-io/github-action@v5.3.0
        with:
          config-file: cypress.config.components.ts
          install: false
          record: false
          component: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_COMPONENTS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # overwrite commit message sent to Cypress Cloud
          COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}
          # re-enable PR comment bot
          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}
